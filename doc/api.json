{"name":"framework","description":"The aurelia framework brings together all the required core aurelia libraries into a ready-to-go application-building platform.","classes":[{"name":"Aurelia","file":"aurelia/framework/src/aurelia.js","line":73,"description":"The framework core that provides the main Aurelia object.","is_constructor":1,"params":[{"name":"loader","description":"The loader for this Aurelia instance to use. If a loader is not specified, Aurelia will use a defaultLoader.","type":"Loader"},{"name":"container","description":"The dependency injection container for this Aurelia instance to use. If a container is not specified, Aurelia will create an empty container.","type":"Container"},{"name":"resources","description":"The resource registry for this Aurelia instance to use. If a resource registry is not specified, Aurelia will create an empty registry.","type":"ResourceRegistry"}],"methods":[{"line":104,"description":"Adds an existing object to the framework's dependency injection container.","name":"withInstance","params":[{"name":"type","description":"The object type of the dependency that the framework will inject.","type":"Class"},{"name":"instance","description":"The existing instance of the dependency that the framework will inject.","type":"Object"}],"return":{"description":"Returns the current Aurelia instance.","type":"Aurelia"}},{"line":117,"description":"Adds a singleton to the framework's dependency injection container.","name":"withSingleton","params":[{"name":"type","description":"The object type of the dependency that the framework will inject.","type":"Class"},{"name":"implementation","description":"The constructor function of the dependency that the framework will inject.","type":"Object"}],"return":{"description":"Returns the current Aurelia instance.","type":"Aurelia"}},{"line":130,"description":"Adds a transient to the framework's dependency injection container.","name":"withTransient","params":[{"name":"type","description":"The object type of the dependency that the framework will inject.","type":"Class"},{"name":"implementation","description":"The constructor function of the dependency that the framework will inject.","type":"Object"}],"return":{"description":"Returns the current Aurelia instance.","type":"Aurelia"}},{"line":143,"description":"Adds globally available view resources to be imported into the Aurelia framework.","name":"globalizeResources","params":[{"name":"resources","description":"The relative module id to the resource. (Relative to the plugin's installer.)","type":"Object|Array"}],"return":{"description":"Returns the current Aurelia instance.","type":"Aurelia"}},{"line":168,"description":"Renames a global resource that was imported.","name":"renameGlobalResource","params":[{"name":"resourcePath","description":"The path to the resource.","type":"String"},{"name":"newName","description":"The new name.","type":"String"}],"return":{"description":"Returns the current Aurelia instance.","type":"Aurelia"}},{"line":181,"description":"Adds an async function that runs before the plugins are run.","name":"addPreStartTask","params":[{"name":"task","description":"The function to run before start.","type":"Function"}],"return":{"description":"Returns the current Aurelia instance.","type":"Aurelia"}},{"line":193,"description":"Adds an async function that runs after the plugins are run.","name":"addPostStartTask","params":[{"name":"task","description":"The function to run after start.","type":"Function"}],"return":{"description":"Returns the current Aurelia instance.","type":"Aurelia"}},{"line":205,"description":"Loads plugins, then resources, and then starts the Aurelia instance.","name":"start","return":{"description":"Returns the started Aurelia instance.","type":"Promise<Aurelia>"}},{"line":245,"description":"Enhances the host's existing elements with behaviors and bindings.","name":"enhance","params":[{"name":"bindingContext","description":"A binding context for the enhanced elements.","type":"Object"},{"name":"applicationHost","description":"The DOM object that Aurelia will enhance.","type":"String|Object"}],"return":{"description":"Returns the current Aurelia instance.","type":"Promise<Aurelia>"}},{"line":265,"description":"Instantiates the root view-model and view and add them to the DOM.","name":"setRoot","params":[{"name":"root","description":"The root view-model to load upon bootstrap.","type":"Object"},{"name":"applicationHost","description":"The DOM object that Aurelia will attach to.","type":"String|Object"}],"return":{"description":"Returns the current Aurelia instance.","type":"Promise<Aurelia>"}}],"properties":[],"events":[]},{"name":"Plugins","file":"aurelia/framework/src/plugins.js","line":24,"description":"Manages loading and configuring plugins.","is_constructor":1,"params":[{"name":"aurelia","description":"An instance of Aurelia.","type":"Aurelia"}],"methods":[{"line":40,"description":"Configures an internal feature plugin before Aurelia starts.","name":"feature","params":[{"name":"plugin","description":"The folder for the internal plugin to configure (expects an index.js in that folder).","type":"String"},{"name":"config","description":"The configuration for the specified plugin.","type":"Config"}],"return":{"description":"Returns the current Plugins instance.","type":"Plugins"}},{"line":53,"description":"Configures an external, 3rd party plugin before Aurelia starts.","name":"plugin","params":[{"name":"plugin","description":"The ID of the 3rd party plugin to configure.","type":"String"},{"name":"config","description":"The configuration for the specified plugin.","type":"Config"}],"return":{"description":"Returns the current Plugins instance.","type":"Plugins"}},{"line":76,"description":"Plugs in the default binding language from aurelia-templating-binding.","name":"defaultBindingLanguage","return":{"description":"Returns the current Plugins instance.","type":"Plugins"}},{"line":92,"description":"Plugs in the router from aurelia-templating-router.","name":"router","return":{"description":"Returns the current Plugins instance.","type":"Plugins"}},{"line":108,"description":"Plugs in the default history implementation from aurelia-history-browser.","name":"history","return":{"description":"Returns the current Plugins instance.","type":"Plugins"}},{"line":124,"description":"Plugs in the default templating resources (if, repeat, show, compose, etc.) from aurelia-templating-resources.","name":"defaultResources","return":{"description":"Returns the current Plugins instance.","type":"Plugins"}},{"line":141,"description":"Plugs in the event aggregator from aurelia-event-aggregator.","name":"eventAggregator","return":{"description":"Returns the current Plugins instance.","type":"Plugins"}},{"line":158,"description":"Sets up the Aurelia configuration. This is equivalent to calling `.defaultBindingLanguage().defaultResources().history().router().eventAggregator();`","name":"standardConfiguration","return":{"description":"Returns the current Plugins instance.","type":"Plugins"}},{"line":173,"description":"Plugs in the ConsoleAppender and sets the log level to debug.","name":"developmentLogging","return":{"description":"Returns the current Plugins instance.","type":"Plugins"}}],"properties":[],"events":[]}],"methods":[],"properties":[],"events":[]}